//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.269
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace VK {
    using System;
    using System.Collections.Generic;
    using System.Linq;
    
    
    public partial class VKApiManager {
        
        public class Docs : VKAPIBranch {
            
            private const string API_BRANCH = "docs.{0}";
            
            /// <summary>Создает объект класса <typeparamref name="Docs"/>.</summary>
            public Docs(bool needXml) : 
                    base(needXml) {
                API_URI_BASE_TEMPLATE = String.Format(API_URI_BASE, API_BRANCH);
            }
            
            #region docs.get
            /// <summary>Возвращает расширенную информацию о документах текущего пользователя.</summary>
            /// <param name="oid">id пользователя или группы, документы которого нужно вернуть</param>
            /// <param name="count">количество документов, которое нужно вернуть</param>
            /// <param name="offset">смещение, необходимое для выборки определенного подмножества документов</param>
            /// <returns>Ответ сервера в XML или JSON формате.</returns>
            private string get(System.Int64? oid, System.Int32? count, System.Int32? offset) {
                manager.AddValueByName("@oid", oid);
                manager.AddValueByName("@count", count);
                manager.AddValueByName("@offset", offset);
                return GetResponse("get");
            }
            #endregion
            
            #region docs.getById
            /// <summary>Возвращает информацию о документах.</summary>
            /// <param name="docs">перечисленные через запятую идентификаторы – идущие через знак подчеркивания id пользователей, которым принадлежат документы, и id самих документов</param>
            /// <returns>Ответ сервера в XML или JSON формате.</returns>
            private string getById(string docs) {
                manager.AddValueByName("@docs", docs);
                return GetResponse("getById");
            }
            #endregion
            
            #region docs.getUploadServer
            /// <summary>Возвращает адрес сервера для</summary>
            /// <returns>Ответ сервера в XML или JSON формате.</returns>
            private string getUploadServer() {
                return GetResponse("getUploadServer");
            }
            #endregion
            
            #region docs.getWallUploadServer
            /// <summary></summary>
            /// <returns>Ответ сервера в XML или JSON формате.</returns>
            private string getWallUploadServer() {
                return GetResponse("getWallUploadServer");
            }
            #endregion
            
            #region docs.save
            /// <summary>Сохраняет документ после его успешной</summary>
            /// <param name="file">Параметр, возвращаемый в результате загрузки файла на сервер</param>
            /// <returns>Ответ сервера в XML или JSON формате.</returns>
            private string save(string file) {
                manager.AddValueByName("@file", file);
                return GetResponse("save");
            }
            #endregion
        }
    }
}
