//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.17626
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace VK {
    using System;
    using System.Collections.Generic;
    using System.Linq;
    
    
    public partial class VKApiManager {
        
        public class Fave : VKAPIBranch {
            
            private const string API_BRANCH = "fave.{0}";
            
            /// <summary>Создает объект класса <typeparamref name="Fave"/>.</summary>
            public Fave(bool needXml) : 
                    base(needXml) {
                API_URI_BASE_TEMPLATE = String.Format(API_URI_BASE, API_BRANCH);
            }
            
            #region fave.getPhotos
            /// <summary>Возвращает фотографии, на которых текущий пользователь поставил отметку &quot;Мне нравится&quot;.</summary>
            /// <param name="offset">смещение, необходимое для выборки определенного подмножества фотографий</param>
            /// <param name="count">количество фотографий, которое необходимо получить</param>
            /// <returns>Ответ сервера в XML или JSON формате.</returns>
            private VKResponseBase getPhotos(System.Int32? offset, System.Int32? count) {
                manager.AddValueByName("@offset", offset);
                manager.AddValueByName("@count", count);
                return new VKResponseBase(GetResponse("getPhotos"), IsXMLResponse);
            }
            
            /// <summary>Возвращает фотографии, на которых текущий пользователь поставил отметку &quot;Мне нравится&quot;.</summary>
            /// <param name="offset">смещение, необходимое для выборки определенного подмножества фотографий</param>
            /// <param name="count">количество фотографий, которое необходимо получить</param>
            /// <returns>Ответ сервера в XML или JSON формате.</returns>
            public VKResponseBase GetPhotos(System.Int32? offset = null, System.Int32? count = null) {
                return getPhotos(offset, count);
            }
            #endregion
            
            #region fave.getVideos
            /// <summary>Возвращает список видеозаписей, на которых текущий пользователь поставил отметку &quot;Мне нравится&quot;.</summary>
            /// <param name="count">количество возвращаемых видеозаписей</param>
            /// <param name="offset">смещение относительно первой найденной видеозаписи для выборки определенного подмножества</param>
            /// <returns>Ответ сервера в XML или JSON формате.</returns>
            private VKResponseBase getVideos(System.Int32? count, System.Int32? offset) {
                manager.AddValueByName("@count", count);
                manager.AddValueByName("@offset", offset);
                return new VKResponseBase(GetResponse("getVideos"), IsXMLResponse);
            }
            
            /// <summary>Возвращает список видеозаписей, на которых текущий пользователь поставил отметку &quot;Мне нравится&quot;.</summary>
            /// <param name="count">количество возвращаемых видеозаписей</param>
            /// <param name="offset">смещение относительно первой найденной видеозаписи для выборки определенного подмножества</param>
            /// <returns>Ответ сервера в XML или JSON формате.</returns>
            public VKResponseBase GetVideos(System.Int32? count = null, System.Int32? offset = null) {
                return getVideos(count, offset);
            }
            #endregion
            
            #region fave.getPosts
            /// <summary>Возвращает записи, на которых текущий пользователь поставил отметку &quot;Мне нравится&quot;.</summary>
            /// <param name="offset">смещение, необходимое для выборки определенного подмножества сообщений</param>
            /// <param name="count">количество сообщений, которое необходимо получить (но не более 100)</param>
            /// <param name="extended">1 - будут возвращены три массива wall, profiles, и groups</param>
            /// <returns>Ответ сервера в XML или JSON формате.</returns>
            private VKResponseBase getPosts(System.Int32? offset, System.Int32? count, System.Boolean? extended) {
                manager.AddValueByName("@offset", offset);
                manager.AddValueByName("@count", count);
                manager.AddValueByName("@extended", extended);
                return new VKResponseBase(GetResponse("getPosts"), IsXMLResponse);
            }
            
            /// <summary>Возвращает записи, на которых текущий пользователь поставил отметку &quot;Мне нравится&quot;.</summary>
            /// <param name="extended">1 - будут возвращены три массива wall, profiles, и groups</param>
            /// <param name="offset">смещение, необходимое для выборки определенного подмножества сообщений</param>
            /// <param name="count">количество сообщений, которое необходимо получить (но не более 100)</param>
            /// <returns>Ответ сервера в XML или JSON формате.</returns>
            public VKResponseBase GetPosts(System.Boolean? extended = null, System.Int32? offset = null, System.Int32? count = null) {
                return getPosts(offset, count, extended);
            }
            #endregion
            
            #region fave.getUsers
            /// <summary>Возвращает список пользователей, добавленных текущим пользователем в закладки.</summary>
            /// <param name="fields">Список полей профилей пользователей, которые необходимо вернуть</param>
            /// <returns>Ответ сервера в XML или JSON формате.</returns>
            private VKResponseBase getUsers(ProfileFields? fields) {
                manager.AddValueByName("@fields", fields);
                return new VKResponseBase(GetResponse("getUsers"), IsXMLResponse);
            }
            
            /// <summary>Возвращает список пользователей, добавленных текущим пользователем в закладки.</summary>
            /// <param name="fields">Список полей профилей пользователей, которые необходимо вернуть</param>
            /// <returns>Ответ сервера в XML или JSON формате.</returns>
            public VKResponseBase GetUsers(ProfileFields? fields) {
                return getUsers(fields);
            }
            #endregion
            
            #region fave.getLinks
            /// <summary>Возвращает ссылки, добавленные в закладки текущим пользователем.</summary>
            /// <returns>Ответ сервера в XML или JSON формате.</returns>
            private VKResponseBase getLinks() {
                return new VKResponseBase(GetResponse("getLinks"), IsXMLResponse);
            }
            
            /// <summary>Возвращает ссылки, добавленные в закладки текущим пользователем.</summary>
            /// <returns>Ответ сервера в XML или JSON формате.</returns>
            public VKResponseBase GetLinks() {
                return getLinks();
            }
            #endregion
        }
    }
}
