//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.269
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace VK {
    using System;
    using System.Collections.Generic;
    using System.Linq;
    
    
    public partial class VKApiManager {
        
        public class Storage : VKAPIBranch {
            
            private const string API_BRANCH = "storage.{0}";
            
            /// <summary>Создает объект класса <typeparamref name="Storage"/>.</summary>
            public Storage(bool needXml) : 
                    base(needXml) {
                API_URI_BASE_TEMPLATE = String.Format(API_URI_BASE, API_BRANCH);
            }
            
            #region storage.set
            /// <summary>Сохраняет значение переменной, название которой передано в параметре</summary>
            /// <param name="key">Строковое название переменной длиной не более 100 символов</param>
            /// <param name="value">Строковое значение переменной, ограниченное 4096 байтами</param>
            /// <param name="global">Указывается 1, если необходимо работать с глобальными переменными, а не с переменными пользователя</param>
            /// <param name="uid">id пользователя, переменная которого устанавливается, в случае если данные запрашиваются серверным методом</param>
            /// <returns>Ответ сервера в XML или JSON формате.</returns>
            private string set(string key, string value, bool? global, System.Int64? uid) {
                manager.AddValueByName("@key", key);
                manager.AddValueByName("@value", value);
                manager.AddValueByName("@global", global);
                manager.AddValueByName("@uid", uid);
                return GetResponse("set");
            }
            #endregion
            
            #region storage.get
            /// <summary>Возвращает значение переменной, название которой передано в параметре</summary>
            /// <param name="key">Строковое название переменной длиной не более 100 символов</param>
            /// <param name="keys">Список ключей, разделённых запятыми</param>
            /// <param name="global">Указывается 1, если необходимо получить глобальную переменную, а не переменную пользователя</param>
            /// <param name="uid">id пользователя, переменная которого считывается, в случае если данные запрашиваются серверным методом</param>
            /// <returns>Ответ сервера в XML или JSON формате.</returns>
            private string get(string key, string keys, bool? global, System.Int64? uid) {
                manager.AddValueByName("@key", key);
                manager.AddValueByName("@keys", keys);
                manager.AddValueByName("@global", global);
                manager.AddValueByName("@uid", uid);
                return GetResponse("get");
            }
            #endregion
        }
    }
}
