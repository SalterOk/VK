//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.269
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace VK {
    using System;
    using System.Collections.Generic;
    using System.Linq;
    
    
    public partial class VKApiManager {
        
        public class Subscriptions : VKAPIBranch {
            
            private const string API_BRANCH = "subscriptions.{0}";
            
            /// <summary>Создает объект класса <typeparamref name="Subscriptions"/>.</summary>
            public Subscriptions(bool needXml) : 
                    base(needXml) {
                API_URI_BASE_TEMPLATE = String.Format(API_URI_BASE, API_BRANCH);
            }
            
            #region subscriptions.get
            /// <summary>Возвращает список идентификаторов пользователей, которые входят в список подписок текущего пользователя. Идентификаторы пользователей в списке отсортированы в порядке убывания времени их добавления.</summary>
            /// <param name="uid">идентификатор пользователя, список которого необходимо получить</param>
            /// <param name="offset">смещение относительно начала списка, для выборки определенного подмножества</param>
            /// <param name="count">количество возвращаемых идентификаторов пользователей</param>
            /// <returns>Ответ сервера в XML или JSON формате.</returns>
            private string get(System.Int64? uid, System.Int32? offset, System.Int32? count) {
                manager.AddValueByName("@uid", uid);
                manager.AddValueByName("@offset", offset);
                manager.AddValueByName("@count", count);
                return GetResponse("get");
            }
            #endregion
            
            #region subscriptions.getFollowers
            /// <summary>Возвращает список идентификаторов пользователей, которые являются подписчиками текущего пользователя. Идентификаторы пользователей в списке отсортированы в порядке убывания времени их добавления.</summary>
            /// <param name="uid">идентификатор пользователя, список которого необходимо получить</param>
            /// <param name="offset">смещение, относительно начала списка, для выборки определенного подмножества</param>
            /// <param name="count">количество возвращаемых идентификаторов пользователей</param>
            /// <returns>Ответ сервера в XML или JSON формате.</returns>
            private string getFollowers(System.Int64? uid, System.Int32? offset, System.Int32? count) {
                manager.AddValueByName("@uid", uid);
                manager.AddValueByName("@offset", offset);
                manager.AddValueByName("@count", count);
                return GetResponse("getFollowers");
            }
            #endregion
            
            #region subscriptions.follow
            /// <summary>Добавляет указанного пользователя в список подписок текущего пользователя.</summary>
            /// <param name="uid">идентификатор пользователя, которого необходимо добавить в список подписок</param>
            /// <returns>Ответ сервера в XML или JSON формате.</returns>
            private string follow(System.Int64? uid) {
                manager.AddValueByName("@uid", uid);
                return GetResponse("follow");
            }
            #endregion
            
            #region subscriptions.unfollow
            /// <summary>Удаляет указанного пользователя из списка подписок текущего пользователя.</summary>
            /// <param name="uid">идентификатор пользователя, которого необходимо удалить из списка подписок</param>
            /// <returns>Ответ сервера в XML или JSON формате.</returns>
            private string unfollow(System.Int64? uid) {
                manager.AddValueByName("@uid", uid);
                return GetResponse("unfollow");
            }
            #endregion
        }
    }
}
