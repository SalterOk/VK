//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.17626
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace VK {
    using System;
    using System.Collections.Generic;
    using System.Linq;
    
    
    public partial class VKApiManager {
        
        public class Groups : VKAPIBranch {
            
            private const string API_BRANCH = "groups.{0}";
            
            /// <summary>Создает объект класса <typeparamref name="Groups"/>.</summary>
            public Groups(bool needXml) : 
                    base(needXml) {
                API_URI_BASE_TEMPLATE = String.Format(API_URI_BASE, API_BRANCH);
            }
            
            #region groups.get
            /// <summary>Возвращает список групп указанного пользователя.</summary>
            /// <param name="uid">ID пользователя, группы которого необходимо получить</param>
            /// <param name="extended">Если указать в качестве этого параметра 1, то будет возвращена полная информация о группах пользователя</param>
            /// <param name="filter">Список фильтров сообществ, которые необходимо вернуть, перечисленные через запятую</param>
            /// <param name="fields">Список полей из информации о группах, которые необходимо получить</param>
            /// <param name="offset">Смещение, необходимое для выборки определённого подмножества групп</param>
            /// <param name="count">Количество записей которое необходимо вернуть, не более 1000</param>
            /// <returns>Ответ сервера в XML или JSON формате.</returns>
			private VKResponseBase get(System.Int64? uid, System.Boolean? extended, GroupsFilter? filter, GroupFields? fields, System.Int32? offset, System.Int32? count) {
                manager.AddValueByName("@uid", uid);
                manager.AddValueByName("@extended", extended);
                manager.AddValueByName("@filter", filter);
                manager.AddValueByName("@fields", fields);
                manager.AddValueByName("@offset", offset);
                manager.AddValueByName("@count", count);
                return new VKResponseBase(GetResponse("get"), IsXMLResponse);
            }
            
            /// <summary>Возвращает список групп указанного пользователя.</summary>
            /// <param name="uid">ID пользователя, группы которого необходимо получить</param>
            /// <param name="extended">Если указать в качестве этого параметра 1, то будет возвращена полная информация о группах пользователя</param>
            /// <param name="filter">Список фильтров сообществ, которые необходимо вернуть, перечисленные через запятую</param>
            /// <param name="fields">Список полей из информации о группах, которые необходимо получить</param>
            /// <returns>Ответ сервера в XML или JSON формате.</returns>
			public VKResponseBase Get(long uid, bool? extended = null, GroupsFilter? filter = null, GroupFields? fields = null) {
                return get(uid, extended, filter, fields, null, null);
            }
            
            /// <summary>Возвращает список групп указанного пользователя.</summary>
            /// <param name="extended">Если указать в качестве этого параметра 1, то будет возвращена полная информация о группах пользователя</param>
            /// <param name="filter">Список фильтров сообществ, которые необходимо вернуть, перечисленные через запятую</param>
            /// <param name="fields">Список полей из информации о группах, которые необходимо получить</param>
            /// <returns>Ответ сервера в XML или JSON формате.</returns>
			public VKResponseBase Get(bool? extended = null, GroupsFilter? filter = null, GroupFields? fields = null) {
                return get(null, extended, filter, fields, null, null);
            }
            #endregion
            
            #region groups.getById
            /// <summary>Возвращает информацию о заданной группе или о нескольких группах.</summary>
            /// <param name="gids">ID групп, перечисленные через запятую, информацию о которых необходимо получить</param>
            /// <param name="fields">Список полей из информации о группах, которые необходимо получить</param>
            /// <returns>Ответ сервера в XML или JSON формате.</returns>
			private VKResponseBase getById(IdList gids, GroupFields? fields) {
                manager.AddValueByName("@gids", gids);
                manager.AddValueByName("@fields", fields);
                return new VKResponseBase(GetResponse("getById"), IsXMLResponse);
            }
            
            /// <summary>Возвращает информацию о заданной группе или о нескольких группах.</summary>
            /// <param name="gids">ID групп, перечисленные через запятую, информацию о которых необходимо получить</param>
            /// <param name="fields">Список полей из информации о группах, которые необходимо получить</param>
            /// <returns>Ответ сервера в XML или JSON формате.</returns>
            public VKResponseBase GetById(IdList gids, GroupFields? fields = null) {
                return getById(gids, fields);
            }
            #endregion
            
            #region groups.isMember
            /// <summary>Возвращает информацию о том является ли пользователь участником заданной группы.</summary>
            /// <param name="gid">ID или короткое имя группы</param>
            /// <param name="uid">ID пользователя</param>
            /// <param name="extended">1 - вернуть ответ в расширенной форме, 2 - возвращать ответ в сокращённой форме (по умолчанию) </param>
            /// <returns>Ответ сервера в XML или JSON формате.</returns>
            private VKResponseBase isMember(System.Int64? gid, System.Int64? uid, System.Boolean? extended) {
                manager.AddValueByName("@gid", gid);
                manager.AddValueByName("@uid", uid);
                manager.AddValueByName("@extended", extended);
                return new VKResponseBase(GetResponse("isMember"), IsXMLResponse);
            }
            
            /// <summary>Возвращает информацию о том является ли пользователь участником заданной группы.</summary>
            /// <param name="gid">ID или короткое имя группы</param>
            /// <param name="uid">ID пользователя</param>
            /// <param name="extended">1 - вернуть ответ в расширенной форме, 2 - возвращать ответ в сокращённой форме (по умолчанию) </param>
            /// <returns>Ответ сервера в XML или JSON формате.</returns>
			public VKResponseBase IsMember(System.Int64 gid, System.Int64? uid = null, System.Boolean? extended = null) {
                return isMember(gid, uid, extended);
            }
            #endregion
            
            #region groups.getMembers
            /// <summary>Возвращает список участников группы.</summary>
            /// <param name="gid">ID или короткое имя группы, список пользователей которой необходимо получить</param>
            /// <param name="count">Максимальное количество участников группы, которое необходимо получить</param>
            /// <param name="offset">Число, обозначающее смещение, для получения следующих после него участников</param>
            /// <param name="sort">Сортировка с которой необходимо вернуть список групп</param>
            /// <returns>Ответ сервера в XML или JSON формате.</returns>
			private VKResponseBase getMembers(System.Int64? gid, System.Int32? count, System.Int32? offset, GroupSortOrder? sort) {
                manager.AddValueByName("@gid", gid);
                manager.AddValueByName("@count", count);
                manager.AddValueByName("@offset", offset);
                manager.AddValueByName("@sort", sort);
                return new VKResponseBase(GetResponse("getMembers"), IsXMLResponse);
            }
            
            /// <summary>Возвращает список участников группы.</summary>
            /// <param name="gid">ID или короткое имя группы, список пользователей которой необходимо получить</param>
            /// <param name="count">Максимальное количество участников группы, которое необходимо получить</param>
            /// <param name="offset">Число, обозначающее смещение, для получения следующих после него участников</param>
            /// <param name="sort">Сортировка с которой необходимо вернуть список групп</param>
            /// <returns>Ответ сервера в XML или JSON формате.</returns>
			public VKResponseBase GetMembers(System.Int64? gid, int? count = null, int? offset = null, GroupSortOrder? sort = null) {
                return getMembers(gid, count, offset, sort);
            }
            #endregion
            
            #region groups.search
            /// <summary>Осуществляет поиск групп по заданной подстроке.</summary>
            /// <param name="q">Поисковый запрос по которому необходимо найти группу</param>
            /// <param name="offset">Смещение, необходимое для выборки определённого подмножества результатов поиска</param>
            /// <param name="count">Количество результатов поиска которое необходимо вернуть</param>
            /// <returns>Ответ сервера в XML или JSON формате.</returns>
            private VKResponseBase search(string q, System.Int32? offset, System.Int32? count) {
                manager.AddValueByName("@q", q);
                manager.AddValueByName("@offset", offset);
                manager.AddValueByName("@count", count);
                return new VKResponseBase(GetResponse("search"), IsXMLResponse);
            }
            
            /// <summary>Осуществляет поиск групп по заданной подстроке.</summary>
            /// <param name="q">Поисковый запрос по которому необходимо найти группу</param>
            /// <param name="offset">Смещение, необходимое для выборки определённого подмножества результатов поиска</param>
            /// <param name="count">Количество результатов поиска которое необходимо вернуть</param>
            /// <returns>Ответ сервера в XML или JSON формате.</returns>
            public VKResponseBase Search(string q, int? offset = null, int? count = null) {
                return search(q, offset, count);
            }
            #endregion
            
            #region groups.join
            /// <summary>Данный метод позволяет вступить в группу, публичную страницу, а также подтверждать об участии во встрече.</summary>
            /// <param name="gid">Идентификатор группы, публичной страницы или встречи</param>
            /// <param name="not_sure">Опциональный параметр учитываемый, если gid принадлежит встрече</param>
            /// <returns>Ответ сервера в XML или JSON формате.</returns>
			private VKResponseBase join(System.Int64? gid, NotSure? not_sure) {
                manager.AddValueByName("@gid", gid);
                manager.AddValueByName("@not_sure", not_sure);
                return new VKResponseBase(GetResponse("join"), IsXMLResponse);
            }
            
            /// <summary>Данный метод позволяет вступить в группу, публичную страницу, а также подтверждать об участии во встрече.</summary>
            /// <param name="gid">Идентификатор группы, публичной страницы или встречи</param>
            /// <param name="not_sure">Опциональный параметр учитываемый, если gid принадлежит встрече</param>
            /// <returns>Ответ сервера в XML или JSON формате.</returns>
            public VKResponseBase Join(System.Int64? gid, NotSure? not_sure = null) {
                return join(gid, not_sure);
            }
            #endregion
            
            #region groups.leave
            /// <summary>Данный метод позволяет выходить из группы, публичной страницы, или встречи.</summary>
            /// <param name="gid">Идентификатор группы, публичной страницы или встречи</param>
            /// <returns>Ответ сервера в XML или JSON формате.</returns>
            private VKResponseBase leave(System.Int64? gid) {
                manager.AddValueByName("@gid", gid);
                return new VKResponseBase(GetResponse("leave"), IsXMLResponse);
            }
            
            /// <summary>Данный метод позволяет выходить из группы, публичной страницы, или встречи.</summary>
            /// <param name="gid">Идентификатор группы, публичной страницы или встречи</param>
            /// <returns>Ответ сервера в XML или JSON формате.</returns>
            public VKResponseBase Leave(System.Int64? gid) {
                return leave(gid);
            }
            #endregion
        }
    }
}
