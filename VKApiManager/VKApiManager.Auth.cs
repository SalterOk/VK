//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.17626
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace VK {
    using System;
    using System.Collections.Generic;
    using System.Linq;
    
    
    public partial class VKApiManager {
        
        public class Auth : VKAPIBranch {
            
            private const string API_BRANCH = "auth.{0}";
            
            /// <summary>Создает объект класса <typeparamref name="Auth"/>.</summary>
            public Auth(bool needXml) : 
                    base(needXml) {
                API_URI_BASE_TEMPLATE = String.Format(API_URI_BASE, API_BRANCH);
            }
            
            #region auth.signup
            /// <summary>Регистрирует нового пользователя по номеру телефона.</summary>
            /// <param name="phone">Номер телефона регистрируемого пользователя</param>
            /// <param name="first_name">Имя пользователя</param>
            /// <param name="last_name">Фамилия пользователя</param>
            /// <param name="client_id">Идентификатор Вашего приложения</param>
            /// <param name="client_secret">Секретный ключ Вашего приложения</param>
            /// <param name="sex">Пол пользователя: 1 - Женский, 2 - Мужской</param>
            /// <param name="password">Пароль пользователя, который будет использоваться при входе</param>
            /// <param name="voice">1 - в случае если вместо SMS необходимо позвонить на указанный номер и продиктовать код голосом</param>
            /// <param name="sid">Идентификатор сессии, необходимый при повторном вызове метода, в случае если SMS сообщение доставлено не было</param>
            /// <param name="test_mode">1 - тестовый режим, при котором не будет зарегистрирован новый пользователь, но при этом номер не будет проверяться на использованность</param>
            /// <returns>Ответ сервера в XML или JSON формате.</returns>
            private VKResponseBase signup(string phone, string first_name, string last_name, string client_id, string client_secret, string sex, string password, string voice, string sid, string test_mode) {
                manager.AddValueByName("@phone", phone);
                manager.AddValueByName("@first_name", first_name);
                manager.AddValueByName("@last_name", last_name);
                manager.AddValueByName("@client_id", client_id);
                manager.AddValueByName("@client_secret", client_secret);
                manager.AddValueByName("@sex", sex);
                manager.AddValueByName("@password", password);
                manager.AddValueByName("@voice", voice);
                manager.AddValueByName("@sid", sid);
                manager.AddValueByName("@test_mode", test_mode);
                return new VKResponseBase(GetResponse("signup"), IsXMLResponse);
            }
            #endregion
            
            #region auth.confirm
            /// <summary>Завершает регистрацию нового пользователя, начатую методом auth.signup, по коду, полученному через SMS.</summary>
            /// <param name="phone">Номер телефона регистрируемого пользователя</param>
            /// <param name="code">Код, полученный через SMS в результате выполнения метода auth</param>
            /// <param name="password">Пароль пользователя, который будет использоваться при входе</param>
            /// <param name="client_id">Идентификатор Вашего приложения</param>
            /// <param name="client_secret">Секретный ключ Вашего приложения</param>
            /// <param name="test_mode">1 - тестовый режим, при котором не будет зарегистрирован новый пользователь, но при этом номер не будет проверяться на использованность</param>
            /// <returns>Ответ сервера в XML или JSON формате.</returns>
            private VKResponseBase confirm(string phone, string code, string password, string client_id, string client_secret, string test_mode) {
                manager.AddValueByName("@phone", phone);
                manager.AddValueByName("@code", code);
                manager.AddValueByName("@password", password);
                manager.AddValueByName("@client_id", client_id);
                manager.AddValueByName("@client_secret", client_secret);
                manager.AddValueByName("@test_mode", test_mode);
                return new VKResponseBase(GetResponse("confirm"), IsXMLResponse);
            }
            #endregion
            
            #region auth.checkPhone
            /// <summary>Проверяет правильность введённого номера.</summary>
            /// <param name="phone">Номер телефона пользователя</param>
            /// <param name="client_id">Идентификатор Вашего приложения</param>
            /// <param name="client_secret">Секретный ключ Вашего приложения</param>
            /// <returns>Ответ сервера в XML или JSON формате.</returns>
            private VKResponseBase checkPhone(string phone, string client_id, string client_secret) {
                manager.AddValueByName("@phone", phone);
                manager.AddValueByName("@client_id", client_id);
                manager.AddValueByName("@client_secret", client_secret);
                return new VKResponseBase(GetResponse("checkPhone"), IsXMLResponse);
            }
            #endregion
        }
    }
}
